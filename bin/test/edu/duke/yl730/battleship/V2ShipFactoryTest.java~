
package edu.duke.yl730.battleship;

import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class V2ShipFactoryTest {

    @Test
    void test_makeSubmarine() {
        V1ShipFactory v = new V1ShipFactory();
        Coordinate c = new Coordinate(1,2);
        Placement p = new Placement(c,'V');
        checkShip(v.makeSubmarine(p), "Submarine", 's',
                new Coordinate[]{new Coordinate(1, 2), new Coordinate(2, 2)});
        Placement p1 = new Placement(c,'H');
        checkShip(v.makeSubmarine(p1), "Submarine", 's',
                new Coordinate[]{new Coordinate(1, 2), new Coordinate(1, 3)});
        assertThrows(IllegalArgumentException.class, () -> v.makeSubmarine(new Placement(c,'b')));

    }
    @Test
    void test_makeDestroyer() {
        V1ShipFactory v = new V1ShipFactory();
        Coordinate c = new Coordinate(1,2);
        Placement p = new Placement(c,'H');
        checkShip(v.makeDestroyer(p), "Destroyer", 'd',
                new Coordinate[]{new Coordinate(1, 2), new Coordinate(1, 3), new Coordinate(1, 4)});
        Coordinate[] coordinates = new Coordinate[]{new Coordinate(1, 2), new Coordinate(2, 2),
                new Coordinate(3, 2)};
        Placement p1 = new Placement(c,'V');
        checkShip(v.makeDestroyer(p1), "Destroyer", 'd', coordinates);

    }

    private void checkShip(Ship<Character> testShip, String expectedName,
                           char expectedLetter,  Coordinate[] expectedLocs){
        assertEquals(testShip.getName(), expectedName);
        for(int i = 0; i<expectedLocs.length;i++){
            assertEquals(testShip.getDisplayInfoAt(expectedLocs[i],true),expectedLetter);
        }
    }

}
