/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.duke.yl730.battleship;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.PrintStream;
import java.io.Reader;
import java.io.InputStreamReader;
import java.util.function.Function;

public class App {
    final TextPlayer player1;
    final TextPlayer player2;


    public App(TextPlayer player1,TextPlayer player2) {
        this.player1 = player1;
        this.player2 = player2;
    }

    /**
     * Do all placement for two players
     * @throws IOException
     */
    public void doPlacementPhase() throws IOException{
        player1.doPlacementPhase();
        player2.doPlacementPhase();
    }

    /**
     * This function is to run all turns of a version 1 game
     * @param enemyBoard enemy's board
     * @param enemyView enemy's view
     * @throws IOException
     */
    public void doAttackingPhase(Board<Character> enemyBoard, BoardTextView enemyView) throws IOException{
        while(true) {
            player1.playOneTurn(enemyBoard, enemyView);
            if(player2.ifLose()){
                player2.out.println("player2, you are lost");
                break;
            }
            player2.playOneTurn(player1.theBoard, player1.view);
            if(player1.ifLose()){
                player1.out.println("player1, you are lost");
                break;
            }
        }
    }

//
//    /**
//     * This function is to run all turns of a version 2 game
//     * @param enemyBoard enemy's board
//     * @param enemyView enemy's view
//     * @throws IOException
//     */
//    public void doOperationPhase_V2(Board<Character> enemyBoard, BoardTextView enemyView) throws IOException{
//        while(true) {
//            player1.playOneTurn_V2(enemyBoard, enemyView);
//            if(player2.ifLose()){
//                player2.out.println("player2, you are lost");
//                break;
//            }
//            player2.playOneTurn_V2(player1.theBoard, player1.view);
//            if(player1.ifLose()){
//                player1.out.println("player1, you are lost");
//                break;
//            }
//        }
//    }

    /**
     * This function is to ask user to choose player and generate corresponding player
     * @param name the name of the player
     * @param b board of the new player
     * @param input input of new player
     * @param factory ship factory of the new player
     * @return a new text player
     * @throws IOException
     */
    public static TextPlayer choosePlayer( String name,Board<Character> b,
                                   BufferedReader input, AbstractShipFactory<Character> factory) throws IOException{
        System.out.println("which kind of player do you want to choose?\n" +
                "C for computer\n" +
                "H for human\n");
        char c = 'h';
        while (true){
            String option = input.readLine();
            if (option == null || option.length() != 1) {
                System.out.println("Your input is invalid, please try again!\n");
                continue;
            }
            if(option.charAt(0)!='H' && option.charAt(0)!='C'){
                System.out.println("Your choice is invalid, please try again!\n");
                continue;
            }
            c = option.charAt(0);
            break;
        }
        if(c=='H'){
            return new TextPlayer_V2(name, b, input, System.out,factory);
        } else{
            return new ComputerPlayer(name,b,input, System.out,factory);
        }
    }

    public static void main(String[] args) throws IOException{
        Board<Character> b1 = new BattleShipBoard<>(10,20,'X');
        Board<Character> b2 = new BattleShipBoard<>(10,20,'X');
        BoardTextView b2view = new BoardTextView(b2);
        V2ShipFactory factory = new V2ShipFactory();

        BufferedReader input = new BufferedReader(new InputStreamReader(System.in));

        TextPlayer p1 = choosePlayer("A", b1, input,factory);
        TextPlayer p2 = choosePlayer("B", b2, input,factory);
        App app = new App(p1,p2);
        app.doPlacementPhase();
        app.doAttackingPhase(b2,b2view);
    }

//    public static void main(String[] args) throws IOException{
//        Board<Character> b1 = new BattleShipBoard<>(10,20,'X');
//        Board<Character> b2 = new BattleShipBoard<>(10,20,'X');
//        //BoardTextView b1view = new BoardTextView(b1);
//        BoardTextView b2view = new BoardTextView(b2);
//        V1ShipFactory factory = new V1ShipFactory();
//        BufferedReader input = new BufferedReader(new InputStreamReader(System.in));
//        TextPlayer p1 = new TextPlayer("A", b1, input, System.out,factory);
//        TextPlayer p2 = new TextPlayer("B", b2, input, System.out,factory);
//        App app = new App(p1,p2);
//        app.doPlacementPhase();
//        app.doAttackingPhase(b2,b2view);
//    }


}
